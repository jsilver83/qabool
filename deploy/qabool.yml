- name: Deploy Qabool
  hosts: qabool
  become: yes
  become_user: root

  vars:
    install_dir: /opt/qabool
    venv_dir: /opt/qabool_venv
    static_files_dir: /opt/qabool_static_files
    nginx_access_log: /var/log/nginx/qabool-access.log
    nginx_error_log: /var/log/nginx/qabool-error.log
    nginx_worker_processes: 32
    nginx_worker_connections: 10000

  tasks:
    - name: Install required software packages
      apt: pkg="{{ item }}" state=installed
      with_items:
        - build-essential
        - libpq-dev
        - python3
        - python3-dev
        - python3-virtualenv
        - virtualenvwrapper
        - gettext
        - nginx-full
        - uwsgi
        - uwsgi-plugin-python3

    - name: Create appilcation user
      user: name=qabool system=yes

    - name: Get the application code
      hg:
        repo: http://hg.itc.kfupm.edu.sa/apps/qabool
        dest: "{{ install_dir }}"
        #revision: stable
        force: yes

    - name: Set file permissions
      file:
        path: "{{ install_dir }}"
        owner: root
        group: qabool
        mode: "u=rwX,g=rX,o="

    - name: Create virtualenv
      pip:
        virtualenv: "{{ venv_dir }}"
        virtualenv_python: python3
        requirements: "{{ install_dir }}/qabool/requirements.txt"

    - name: Configure application
      template:
        src: local_settings.py.j2
        dest: "{{ install_dir }}/qabool/qabool/local_settings.py"
        owner: root
        group: qabool
        mode: 0640

    - name: Migrate database
      command: "{{ venv_dir }}/bin/python manage.py migrate"
      args:
        chdir: "{{ install_dir }}/qabool"

    - name: Compile translation messages
      command: "{{ venv_dir }}/bin/python manage.py compilemessages --locale ar"
      args:
        chdir: "{{ install_dir }}/qabool"

    - name: Load initial data (fixtures)
      command: "{{ venv_dir }}/bin/python manage.py loaddata initial-data.json"
      args:
        chdir: "{{ install_dir }}/qabool"

    - name: Create static files directory
      file:
        path: "{{ static_files_dir }}"
        state: directory
        owner: root
        group: www-data
        mode: "u=rwX,g=rX,o="

    - name: Collect static assets
      command: "{{ venv_dir }}/bin/python manage.py collectstatic --no-input"
      args:
        chdir: "{{ install_dir }}/qabool"

    - name: Configure app server (uwsgi)
      template:
        src: uwsgi-qabool.ini.j2
        dest: /etc/uwsgi/apps-available/qabool.ini
        owner: root
        group: root
        mode: 0644

    - name: Enable app server configuration
      file:
        src: /etc/uwsgi/apps-available/qabool.ini
        dest: /etc/uwsgi/apps-enabled/qabool.ini
        state: link
        owner: root
        group: root

    - name: Configure webserver
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644

    - name: Configure webserver site
      template:
        src: nginx-qabool.j2
        dest: /etc/nginx/sites-available/qabool
        owner: root
        group: root
        mode: 0644

    - name: Enable webserver configuration
      file:
        src: /etc/nginx/sites-available/qabool
        dest: /etc/nginx/sites-enabled/qabool
        state: link
        owner: root
        group: root

    - name: Configure web server status site
      copy:
        src: files/nginx-server-status
        dest: /etc/nginx/sites-available/server-status
        owner: root
        group: root
        mode: 0644

    - name: Enable web server status site
      file:
        src: /etc/nginx/sites-available/server-status
        dest: /etc/nginx/sites-enabled/server-status
        state: link
        owner: root
        group: root

    - name: Disable default webserver site
      file: path=/etc/nginx/sites-enabled/default state=absent

    - name: Restart app server (uwsgi)
      service: name=uwsgi state=restarted

    - name: Restart webserver
      service: name=nginx state=restarted

    # https://github.com/blacked/zbx_nginx_template
    - name: Create zabbix scripts directory
      file:
        path: /etc/zabbix/scripts
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Install zabbix nginx monitoring script
      template:
        src: templates/zbx_nginx_stats.py.j2
        dest: /etc/zabbix/scripts/zbx_nginx_stats.py
        owner: root
        group: root
        mode: 0755

    - name: Install cronjob for zabbix nginx monitoring script
      cron:
        name: zabbix-nginx
        user: www-data
        minute: '*/1'
        job: /etc/zabbix/scripts/zbx_nginx_stats.py
      when: zabbix_server is defined

    - name: Uninstall cronjob for zabbix nginx monitoring
      cron:
        name: zabbix-nginx
        state: absent
      when: zabbix_server is undefined
