- name: Deploy Qabool
  hosts: application-servers
  become: yes
  become_user: root

  # common variables to all environments
  # for environment-specific variables, see:
  # environments/<env-name>/group_vars/all/vars.yml
  vars:
    django_project_name: qabool
    vault_url: https://vault.itc.kfupm.edu.sa
    django_project_admin_username: joud
    django_project_admin_email: joud@kfupm.edu.sa
    django_project_package_name: qabool

    apache_authn: cas
    apache_auth:
      - path: /ar/admin/
        authn_type: cas
        authz_type: none
      - path: /en/admin/
        authn_type: cas
        authz_type: none
      - path: /ar/manage/
        authn_type: cas
        authz_type: none
      - path: /en/manage/
        authn_type: cas
        authz_type: none
      - path: /ar/logout/
        authn_type: cas
        authz_type: none
      - path: /en/logout/
        authn_type: cas
        authz_type: none
      - path: /admin_files/
        authn_type: cas
        authz_type: none

    apache_extra_modules:
      - xsendfile
    apache_extra_config: |
      XSendFile On
      XSendFilePath {{ django_project_media_dir }}

    admins:
      - name: Abdullah Joud
        email: joud@kfupm.edu.sa
    uwsgi_processes: 64

  vars_prompt:
    - name: ad_username
      prompt: Your Active Directory username
      private: no

    - name: ad_password
      prompt: Your Active Directory password
      private: yes


  # tasks to be performed before role tasks, if any
  pre_tasks:
    - name: Vault authentication
      uri:
        url: "{{ vault_url }}/v1/auth/ldap/login/{{ ad_username }}"
        method: POST
        body: {"password": "{{ ad_password }}"}
        body_format: json
      connection: local
      become: no
      register: auth

    - name: Retrieve secret key from Vault
      uri:
        url: "{{ vault_url }}/v1/secret/{{ env }}/operations/apps/qabool/secret_key"
        headers:
          X-Vault-Token: "{{ auth.json.auth.client_token }}"
      connection: local
      become: no
      register: secret_key

    - name: Retrieve database password from Vault
      uri:
        url: "{{ vault_url }}/v1/secret/{{ env }}/database/apps/qabool/database_password"
        headers:
          X-Vault-Token: "{{ auth.json.auth.client_token }}"
      connection: local
      become: no
      register: database_password

    - name: Retrieve email password from Vault
      uri:
        url: "{{ vault_url }}/v1/secret/{{ env }}/email/apps/qabool/email_password"
        headers:
          X-Vault-Token: "{{ auth.json.auth.client_token }}"
      connection: local
      become: no
      register: email_password

    - name: Retrieve sms gateway app sid from Vault
      uri:
        url: "{{ vault_url }}/v1/secret/{{ env }}/operations/apps/qabool/sms_gateway_app_sid"
        headers:
          X-Vault-Token: "{{ auth.json.auth.client_token }}"
      connection: local
      become: no
      register: sms_gateway_app_sid

    - name: Generate local settings
      set_fact:
        django_project_local_settings: "{{ lookup('template', 'local_settings.py.j2') }}"

    - name: Install mod_xsendfile for apache
      apt: pkg=libapache2-mod-xsendfile state=installed

    - name: Install required software packages for zeep - python3-lxml build-deps
      apt: pkg=python3-lxml state=build-dep

    - name: Install required software packages for zeep - additional optional build dependencies
      apt: pkg="{{ item }}" state=installed
      with_items:
        - libxml2-dev
        - libxslt-dev
        - python-defusedxml

  roles:
    - django-project

  # tasks to be performed after role tasks, if any
  post_tasks:
    - name: mount nfs media files repository from filer
      mount:
        name: "{{ django_project_media_dir }}"
        src: "{{ qabool_media_files_remote_path }}"
        fstype: nfs
        state: mounted
