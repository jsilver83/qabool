# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-12 09:59
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('admission_note', models.CharField(blank=True, max_length=500, null=True, verbose_name='Admission Note')),
                ('saudi_mother', models.NullBooleanField(verbose_name='Saudi Mother')),
                ('birthday', models.DateField(null=True, verbose_name='Birthday')),
                ('birthday_ah', models.CharField(max_length=50, null=True, verbose_name='Birthday Hijri')),
                ('mobile', models.CharField(max_length=50, null=True, verbose_name='Mobile')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Phone')),
                ('high_school_gpa', models.FloatField(blank=True, null=True, verbose_name='High School GPA')),
                ('qudrat_score', models.FloatField(blank=True, null=True, verbose_name='Qudrat Score')),
                ('tahsili_score', models.FloatField(blank=True, null=True, verbose_name='Tahsili Score')),
                ('kfupm_id', models.PositiveIntegerField(null=True, unique=True, verbose_name='KFUPM ID')),
                ('first_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name (Arabic)')),
                ('second_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='Second Name (Arabic)')),
                ('third_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='Third Name (Arabic)')),
                ('family_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='Family Name (Arabic)')),
                ('first_name_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name (English)')),
                ('second_name_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='Second Name (English)')),
                ('third_name_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='Third Name (Arabic)')),
                ('family_name_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='Family Name (Arabic)')),
                ('mother_gov_id_file', models.CharField(blank=True, max_length=100, null=True, verbose_name='Mother Government ID')),
                ('birth_certificate', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth Date Certificate')),
                ('government_id_file', models.CharField(blank=True, max_length=100, null=True, verbose_name='Government ID File')),
                ('government_id_issue', models.DateTimeField(blank=True, null=True, verbose_name='Government ID Issue Date')),
                ('government_id_expiry', models.DateTimeField(blank=True, null=True, verbose_name='Government ID Expiry Date')),
                ('government_id_place', models.CharField(blank=True, max_length=50, null=True, verbose_name='Place of Issue')),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Password Number')),
                ('passport_place', models.CharField(blank=True, max_length=50, null=True, verbose_name='Passport Place of Issue ')),
                ('passport_expiry', models.DateTimeField(blank=True, null=True, verbose_name='Passport Expiry Date')),
                ('passport_file', models.CharField(blank=True, max_length=100, null=True, verbose_name='Upload Passport')),
                ('high_school_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='High School Name')),
                ('high_school_system', models.CharField(blank=True, max_length=100, null=True, verbose_name='High School System')),
                ('high_school_province', models.CharField(blank=True, max_length=100, null=True, verbose_name='High School Province')),
                ('high_school_city', models.CharField(blank=True, max_length=100, null=True, verbose_name='High School City')),
                ('high_school_certificate', models.CharField(blank=True, max_length=100, null=True, verbose_name='High School Certificate')),
                ('courses_certificate', models.CharField(blank=True, max_length=100, null=True, verbose_name='Courses Certificate')),
                ('student_notes', models.CharField(blank=True, max_length=500, null=True, verbose_name='Student Notes')),
                ('personal_picture', models.CharField(blank=True, max_length=100, null=True, verbose_name='Personal Picture')),
                ('guardian_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Name')),
                ('guardian_government_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Government ID')),
                ('guardian_relation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Relation')),
                ('guardian_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Phone')),
                ('guardian_mobile', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Mobile')),
                ('guardian_email', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Email')),
                ('guardian_po_box', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian PO Box')),
                ('guardian_postal_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Postal Code')),
                ('guardian_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian City')),
                ('guardian_job', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Work')),
                ('guardian_employer', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Employer')),
                ('blood_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Blood Type')),
                ('student_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Student Address')),
                ('social_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Social Status')),
                ('kids_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Number of Kids')),
                ('employment', models.CharField(blank=True, max_length=50, null=True, verbose_name='Employeement')),
                ('employer_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Employeer Name')),
                ('disability_needs', models.CharField(blank=True, max_length=50, null=True, verbose_name='Disability Type')),
                ('other_needs', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Disability')),
                ('relative_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative Name')),
                ('relative_relation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative Relation')),
                ('relative_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative Mobile')),
                ('relative_po_box', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative PO Box')),
                ('relative_po_stal_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative PO Box')),
                ('relative_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative City')),
                ('relative_job', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative Work')),
                ('relative_employer', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relative Employer')),
                ('admission_letter_print_date', models.DateTimeField(blank=True, null=True, verbose_name='Admission Letter Print Date')),
                ('admission_letter_note', models.CharField(blank=True, max_length=500, null=True, verbose_name='Admission Letter Note')),
                ('medical_report_print_date', models.DateTimeField(blank=True, null=True, verbose_name='Medical Report Print Date')),
                ('withdrawal_date', models.DateTimeField(blank=True, null=True, verbose_name='Withdrawal Date')),
                ('withdrawal_university', models.CharField(blank=True, max_length=100, null=True, verbose_name='Withdrew To University')),
                ('withdrawal_reason', models.CharField(blank=True, max_length=500, null=True, verbose_name='Withdrawal Reason')),
                ('phase2_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Phase 2 Start Date')),
                ('phase2_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Phase 2 End Date')),
                ('phase2_submit_date', models.DateTimeField(blank=True, null=True, verbose_name='Phase 2 Submit Date')),
                ('verification_status', models.CharField(blank=True, max_length=500, null=True, verbose_name='Verification Status')),
                ('verification_notes', models.CharField(blank=True, max_length=500, null=True, verbose_name='Verification Note')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionSemester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_name', models.CharField(max_length=200, verbose_name='Semester Name')),
                ('phase1_start_date', models.DateTimeField(null=True, verbose_name='Phase 1 Start Date')),
                ('phase1_end_date', models.DateTimeField(null=True, verbose_name='Phase 1 End Date')),
                ('phase2_start_date', models.DateTimeField(null=True, verbose_name='Phase 2 Start Date')),
                ('phase2_end_date', models.DateTimeField(null=True, verbose_name='Phase 2 End Date')),
                ('high_school_gpa_weight', models.FloatField(null=True, verbose_name='High School GPA Weight')),
                ('qudrat_score_weight', models.FloatField(null=True, verbose_name='Qudrat Score Weight')),
                ('tahsili_score_weight', models.FloatField(null=True, verbose_name='Tahsili Score Weight')),
            ],
        ),
        migrations.CreateModel(
            name='Agreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_type', models.CharField(max_length=100, null=True, verbose_name='Agreement Type')),
                ('agreement_header_ar', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Agreement Header (Arabic)')),
                ('agreement_header_en', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Agreement Header (English)')),
                ('agreement_footer_ar', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Agreement Footer (Arabic)')),
                ('agreement_footer_en', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Agreement Footer (English)')),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agreement', to='undergraduate_admission.AdmissionSemester', verbose_name='Semester')),
            ],
        ),
        migrations.CreateModel(
            name='AgreementItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_text_ar', models.CharField(max_length=2000, verbose_name='Agreement Text (Arabic)')),
                ('agreement_text_en', models.CharField(max_length=2000, verbose_name='Agreement Text (English)')),
                ('show', models.BooleanField(default=True, verbose_name='Show')),
                ('display_order', models.PositiveSmallIntegerField(null=True, verbose_name='Display Order')),
                ('agreement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='undergraduate_admission.Agreement')),
            ],
            options={
                'ordering': ['agreement', '-display_order'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name_ar', models.CharField(max_length=100, verbose_name='City Name Arabic')),
                ('city_name_en', models.CharField(max_length=100, verbose_name='City Name English')),
                ('show', models.BooleanField(default=True, verbose_name='Show')),
                ('display_order', models.PositiveSmallIntegerField(null=True, verbose_name='Display Order')),
            ],
            options={
                'verbose_name_plural': 'cities',
                'ordering': ['-display_order'],
            },
        ),
        migrations.CreateModel(
            name='DeniedStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('government_id', models.CharField(max_length=12, verbose_name='Government ID')),
                ('student_name', models.CharField(max_length=400, verbose_name='Student Name')),
                ('message', models.CharField(max_length=400, verbose_name='Message')),
                ('university_code', models.CharField(max_length=10, verbose_name='University Code')),
                ('last_trial_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Trial Date')),
                ('trials_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Count Trial')),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='denied_students', to='undergraduate_admission.AdmissionSemester')),
            ],
        ),
        migrations.CreateModel(
            name='DistinguishedStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('government_id', models.CharField(max_length=12, verbose_name='Government ID')),
                ('student_name', models.CharField(max_length=400, verbose_name='Student Name')),
                ('city', models.CharField(max_length=400, verbose_name='City')),
                ('attended', models.BooleanField(default=True, verbose_name='Attended')),
            ],
        ),
        migrations.CreateModel(
            name='GraduationYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graduation_year_en', models.CharField(max_length=50, verbose_name='Graduation Year (English)')),
                ('graduation_year_ar', models.CharField(max_length=50, verbose_name='Graduation Year (Arabic)')),
                ('description', models.CharField(max_length=200, verbose_name='Description')),
                ('show', models.BooleanField(default=True, verbose_name='Show')),
                ('display_order', models.PositiveSmallIntegerField(null=True, verbose_name='Display Order')),
            ],
            options={
                'ordering': ['-display_order'],
            },
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality_ar', models.CharField(max_length=50, verbose_name='Nationality (Arabic)')),
                ('nationality_en', models.CharField(max_length=50, verbose_name='Nationality (English)')),
                ('show', models.BooleanField(default=True, verbose_name='Show')),
                ('display_order', models.PositiveSmallIntegerField(null=True, verbose_name='Display Order')),
            ],
            options={
                'verbose_name_plural': 'nationalities',
                'ordering': ['display_order', 'nationality_en'],
            },
        ),
        migrations.CreateModel(
            name='RegistrationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_ar', models.CharField(max_length=50, verbose_name='Status (Arabic)')),
                ('status_en', models.CharField(max_length=50, verbose_name='Status (English)')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationStatusMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_message_ar', models.CharField(max_length=500, verbose_name='Registration Status Message AR')),
                ('status_message_en', models.CharField(max_length=500, verbose_name='Registration Status Message EN')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='undergraduate_admission.RegistrationStatus')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='high_school_graduation_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='undergraduate_admission.GraduationYear', verbose_name='Graduation Year'),
        ),
        migrations.AddField(
            model_name='user',
            name='nationality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='undergraduate_admission.Nationality', verbose_name='Nationality'),
        ),
        migrations.AddField(
            model_name='user',
            name='semester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applicants', to='undergraduate_admission.AdmissionSemester', verbose_name='Admission Semester'),
        ),
        migrations.AddField(
            model_name='user',
            name='status_message',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='undergraduate_admission.RegistrationStatusMessage', verbose_name='Message Status'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
